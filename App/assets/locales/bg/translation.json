{
  "home": "Начало",
  "data": "Данни",
  "use": "Използване",
  "learn": "Учене",
  "Train": "Трениране",
  "Test": "Тестване",
  "type": "Тип",
  "no-py-env": "Не Намерен Python enviornment!",
  "new-venv":"Нов VENV",
  "use-existing": "Използвай съществуващ",
  "image-classification": "Kласификация На Изображения",
  "object-detection": "Засичане На Обекти",
  "captioning": "Поставяне На Надписи",
  "choose-image-folder": "Избери папка със снимки",
  "choоse-labels": "Избери етикет",
  "create-labels" : "Създай етикети",
  "no-labels": "Нямаш етикет?",
  "overview-button": "Преглед",
  "finish-button": "Приключи",
  "fill-manually": "Попълни ръчно",
  "delete-rows": "Изтрий редове",
  "name-dataset": "Име на набор от данни",
  "tabular": "Табличен",
  "image": "Снимков",
  "text": "Текстов",
  "homepage": "Главна страница",
  "new-datasets": "Нов набор от данни",
  "create-tabular-dataset": "Създай табличен набор отданни",
  "chosen-images": "Избрани снимки",
  "chosen-labels": "Избрани етикети",
  "no-images-found": "Няма намерени снимки",
  "no-labels-found": "Няма намерени етикети",
  "add-label": "Добави етикет",
  "enter-label": "Въведи етикет",
  "missing-width": "Липсва ширина",
  "missing-height": "Липсва височина",
  "missing-name": "Липсва име",
  "width": "Ширина",
  "height": "Височина",
  "name": "Име",
  "delete-image": "Изтрий снимка",
  "create-model": "Създай модел",
  "create-dataset": "Създай на набор от данни",
  "dataset-type": "Вид на набор от данни",
  "dataset": "Набор от данни",
  "hidden-layers": "Скрит слой",
  "add-layer": "Добави слой",
  "activation-function": "Функция за начало",
  "expected-number-between": "Очаквано число между",
  "expected-whole-number-between": "Очаквано цяло число между",
  "and": "и",
  "train-data-expected-10%-or-more": "Oчаквани данни за обучение 10% или повече ",
  "missing-layers": "Липсващи слоеве",
  "new-dataset": "Нов набор от данни",
  "select-file": "Избери файл",
  "make-model": "Направи модел",
  "records": "Записи",
  "image-data": "Данни от снимки",
  "no-datasets-found": "Няма намерени наборa от данни",
  "learn-ai": "Научи изкуствения интелект",
  "ml-introduction": " на страницата за обучение, посветена на основните свойства в машинното обучение (ML). В този модул ще разгледаме ключови свойства, които оказват значително влияние върху обучението и работата на ML моделите. Разбирането на тези свойства е от основно значение за изграждането на ефективни и надеждни ML системи.",
  "neural-network": "Невронна мрежа",
  "neural-network-text": "Невронната мрежа е компютърна система, вдъхновена от структурата и функционирането на човешкия мозък. Тя се използва за решаване на проблеми, които са твърде сложни за традиционните алгоритми. Невронните мрежи се състоят от взаимосвързани възли, наречени неврони, подредени в слоеве. Тези мрежи могат да научават модели и връзки от данните, което ги прави мощни инструменти за задачи като разпознаване на изображения, превод на езици и прогнозен анализ.",
  "components-of-neural-network": "Компоненти на невронна мрежа",
  "neurons": "Невронни",
  "neurons-text": " са основните градивни елементи на една невронна мрежа. Те получават входни данни, обработват ги и произвеждат изходни данни. Невроните са организирани в слоеве: входен слой, скрити слоеве и изходен слой.",
  "layers": "Слоеве",
  "dense": "Напълно свързан слой(Dense)",
  "dense-text": ", известен също като напълно свързан слой, е основен градивен елемент в невронните мрежи. Представете си го като слой, в който всеки неврон е свързан с всеки неврон в предходния и следващия слой. Всеки неврон в плътен слой получава входни данни от всички неврони в предходния слой и произвежда изходна стойност. Плътните слоеве обикновено се използват за изучаване на модели в данните и за изготвяне на прогнози. Например в една проста невронна мрежа за класификация на изображения първият плътен слой може да получи като входни данни сплескани стойности на пикселите на дадено изображение и да се научи да разпознава модели в данните, например ръбове или форми.",
  "dropout": "Отпадане(Dropout)",
  "dropout-text": " е техника за регуларизация, използвана за предотвратяване на прекомерното приспособяване в невронните мрежи. Тя работи чрез произволно отпадане на определен процент неврони (заедно с техните връзки) по време на обучението, като ефективно принуждава мрежата да научи по-устойчиви и обобщаващи характеристики. Отпадането помага на мрежата да не разчита твърде много на конкретни неврони или характеристики, което я прави по-малко склонна да запомня данните от обучението и по-способна да обобщава за непознати данни. Например в слой с отпадане с коефициент на отпадане 0,5 всеки неврон има 50% шанс да бъде временно отпаднат по време на обучението.",
  "conv2D": "Конволюционен 2D слой(Conv2D)",
  "conv2D-text": " слой е основен компонент на конволюционните невронни мрежи (CNN), които се използват широко за задачи като разпознаване на изображения и откриване на обекти. Слоеве Conv2D прилагат операция на конволюция към входните данни, като плъзгат малък филтър (известен също като ядро) върху входното изображение, за да извлече характеристики. Този процес помага на мрежата да научи йерархични представяне на входните данни, като улавя модели на различни нива на абстракция. Например при класификацията на изображения първият Conv2D слой може да научи характеристики на ниско ниво като ръбове и текстури, докато следващите слоеве изучават характеристики от по-високо ниво като форми и обекти.",
  "max-poling2D": "MaxPooling2D",
  "max-poling2D-text": " е операция за обединяване, която обикновено се използва в CNN за намаляване на пространствените размери на картите на признаците, като същевременно се запазва важната информация. Тя работи чрез разделяне на входната карта на признаците на неприпокриващи се области и запазване само на максималната стойност във всяка област. Това намалява изчислителната сложност на мрежата и спомага за предотвратяване на прекомерното приспособяване чрез намаляване на броя на параметрите. Например в CNN за класификация на изображения слоевете MaxPooling2D обикновено се използват за намаляване на картите на признаците след конволюционните слоеве, като намаляват пространствената им разделителна способност, запазвайки най-важната информация.",
  "batch-size": "Размер на партидата",
  "batch-size-text": " определя броя на примерите за обучение, използвани в една итерация на обучението. По-големите размери на партидите могат да ускорят обучението, но изискват повече памет, докато по-малките размери на партидите могат да доведат до по-стабилно обучение. Регулирането на размера на партидата въз основа на хардуерните ограничения и на характеристиките на набора от данни е добро за постигнете оптимална ефективност на обучението.",
  "dataset-split": "Разделяне на набора от данни",
  "training": "Трениране",
  "training-text": " е наборът от данни, използван за обучение на модела. Той включва голяма част от наличните данни и е основа за оценка на параметрите на модела. Наборът за обучение трябва да включва всички възможни входни данни, които моделът може да обработва. Например, ако вашият модел трябва да класифицира снимки на котки и кучета, обучаващата съвкупност трябва да включва както котки, така и кучета.",
  "validation": "Валидация",
  "validation-text": ", понякога наричано множество за разработване, е междинно звено между обучаващото и тестовото множество. Нейната основна цел е да се прецизират хиперпараметрите на модела и да се оцени ефективността му по време на обучението. За разлика от тестовата съвкупност, съвкупността за валидиране се използва повтаряемо по време на разработването на модела. Като оценяваме представянето на модела върху множеството за валидиране, можем да вземем информирани решения за коригиране на хиперпараметрите, за избор на най-добре представящия се модел или за идентифициране на потенциални проблеми, свързани с прекомерно или недостатъчно приспособяване.",
  "testing": "Тестване",
  "testing-text": " е отделно подмножество от данните, задържани по време на фазата на обучение. То е обективен критерий за оценка на работата на модела след обучението. Тестовият набор симулира реални данни, с които моделът вероятно ще се сблъска в производството. Като оценяваме представянето на модела върху невиждани преди това примери, можем да преценим способността му да обобщава и да прави точни прогнози върху нови, невиждани данни.",
  "weights-bias": "Тегла и отклонения",
  "weights-bias-text": " има тегло, което определя силата на връзката. Мрежата се учи, като коригира тези тегла въз основа на входните данни. Освен това всеки неврон има член за отклонение, който помага да се контролира изходът на този неврон.",
  "target": "Цел",
  "target-text": " известна също като целева променлива или зависима променлива, е променливата, която моделът има за цел да предскаже или оцени въз основа на входните характеристики.",
  "learning-rate": "Степен на обучение",
  "learning-rate-text": ", с която се актуализират параметрите на модела по време на обучението. Правилният избор на скоростта на обучение е от решаващо значение за постигане на бърза сходимост, без да се стига до превишаване на скоростта или затъване в локални минимуми. ",
  "epoch": "Епоха",
  "epoch-text": " представлява една пълна итерация на целия набор от данни за обучение, при която моделът актуализира параметрите си въз основа на примерите за обучение, за да минимизира функцията на загубите. По време на всяка епоха наборът от данни се разделя на партиди и моделът последователно обработва всяка партида, като извършва разпространение напред и назад, за да изчисли градиентите и да актуализира параметрите, използвайки оптимизационен алгоритъм, като например спускане по градиент. Обучението за няколко епохи позволява на модела итеративно да се учи от набора от данни, като подобрява производителността си с течение на времето, но е изключително важно да се следи за прекомерно приспособяване чрез оценка на производителността върху отделен набор от данни за валидиране. Регулирането на броя на епохите е от съществено значение за постигане на оптимална производителност на обобщаване без свръхприспособление.",
  "datasets": "Набори от данни",
  "dataset-bold" : "Наборите от данни",
  "datasets-introduction": " са структурирани колекции от данни, използвани за анализ, изследвания или обучение на модели за машинно обучение. Те се състоят от отделни точки данни, всяка от които представлява наблюдение или извадка, заедно с атрибути или характеристики, описващи тези извадки.",
  "tabular-bold" : "Табличните данни",
  "tabular-subtext-1": ", често оприличавани на електронни таблици, са структурирани в редове и колони. Всеки ред представлява отделно наблюдение, докато всяка колона обозначава конкретен атрибут или характеристика, свързана с това наблюдение.",
  "tabular-subtext-2": "По-просто казано, представете си го като организирана таблица, в която всеки ред описва нещо, например информация за клиент или характеристики на продукт. Например в база данни за клиенти всеки ред може да представлява различен клиент, като колоните съдържат подробности като възраст, пол и история на покупките.",
  "tabular-subtext-3": "Етикетите в табличните набори от данни обикновено показват какво се опитваме да предвидим или разберем, например дали даден клиент ще направи покупка или не. Този тип данни често се използват в задачи за прогнозно моделиране и вземане на решения, което ги прави основен аспект на машинното обучение за анализ и разбиране на структурирана информация.",
  "classification-bold": "Класификацията на изображения",
  "classification-subtext-1": " включва обучение на компютъра да разпознава и поставя етикети на изображенията въз основа на тяхното съдържание. Представете си, че учите дете да различава различните животни в книжка с картинки - това е подобна концепция.",
  "classification-subtext-2": "В наборите от данни за класификация на изображения изображенията се категоризират в предварително определени класове или категории, като например 'куче', 'котка' или 'автомобил'. Тези набори от данни са от решаващо значение за обучението на алгоритми за автоматично разпознаване и класифициране на обекти в изображения, което позволява приложения като разпознаване на лица, автономно шофиране и медицински изображения. Етикетите в наборите от данни за класификация на изображения определят правилната категория или клас за всяко изображение, като направляват процеса на обучение и позволяват на модела да прави точни прогнози.",
  "classification-subtext-3": "В областта на програмирането и машинното обучение разбирането на наборите от данни за класификация на изображения е основна стъпка към изграждането на модели, които могат ефективно да интерпретират визуална информация.",
  "detection-bold": "Откриването на обекти",
  "detection-subtext-1": " надхвърля обикновената класификация, като идентифицира и локализира множество обекти в изображението. Това е все едно компютърът да сканира снимка и да очертае квадратчета около различни предмети, като посочи какви са те и къде се намират.",
  "detection-subtext-2": "В наборите от данни за задачи за откриване на обекти изображенията се обозначават с ограничителни полета около обектите, представляващи интерес, заедно с етикети, определящи класа на всеки обект. Например в улична сцена обекти като автомобили, пешеходци и светофари могат да бъдат маркирани с ограничителни полета и съответни етикети.",
  "detection-subtext-3": "Откриването на обекти е от решаващо значение за приложения като наблюдение, автономна навигация и други, тъй като дава възможност на машините да възприемат и взаимодействат със заобикалящата ги среда по детайлен начин.",
  "captioning-bold": "Създаването на надписи към изображения",
  "captioning-subtext-1": " съчетава компютърно зрение и обработка на естествен език за автоматично генериране на описателни надписи към изображения. Това е все едно да научите компютър да описва това, което вижда на дадена снимка, точно както би направил човек..",
  "captioning-subtext-2": "В наборите от данни за надписи на изображения всяко изображение се свързва с един или повече надписи, генерирани от човека, които предоставят текстови описания на обектите, действията и сцените, изобразени на изображенията. Тези набори от данни позволяват на изследователите и разработчиците да обучават алгоритми, които могат да разбират и предават ефективно визуална информация. Етикетите в наборите от данни за надписи на изображения се състоят от текстови описания, съответстващи на всяко изображение, които насочват модела при обучението за генериране на точни и смислени надписи.",
  "captioning-subtext-3": "В областта на програмирането и машинното обучение схващането на концепцията за набори от данни с надписи на изображения поставя основите за създаване на системи с изкуствен интелект, способни да разбират и описват визуално съдържание.",
  "models": "Модели",
  "setup": "Настройване",
  "setup-introduction": "На тази страница ще научите как да настроите средата на Python, в която ще се изпълнява целият код на Python, използван за създаване и обучение на моделите. Първо изберете дали ще използвате CPU или GPU за създаване и обучение на моделите. Използването на CPU е по-просто, но е и по-бавно. От друга страна, използването на графичен процесор е много по-бързо, но е и по-трудно за настройка.",
  "cpu-introduction": "Ако искате да използвате централния си процесор, можете да следвате това ръководство, което използва Python за създаване на средата, или ръководството за графични процесори, което използва miniconda за средата и прескача тази стъпка.",
  "gpu-setup":"GPU настройване",
  "system-requirements": "Системни изисквания",
  "or-higher":"или по-високо",
  "python-version":"Ако Python все още не е инсталиран на вашата система, изтеглете и инсталирайте Python 3.9 от ",
  "official-python-website": "Офицалния уебсайт на Python",
  "check-python-path": " Уверете се, че сте маркирали опцията за добавяне на Python към системния PATH по време на инсталацията.",
  "open-command-prompt": "Отваряне на командния прозорец",
  "press":"Натиснете ",
  "type-cmd": "напишете ",
  "press-enter":"и натиснете Enter, за да отворите cmd.",
  "create-virtual-env": "Създаване на виртуална среда",
  "activate-virtual-env": "Активиране на виртуалната среда",
  "active-virtual-env": "Активирайте виртуалната среда, като изпълните следната команда",
  "install-necessary-libraries": "Инсталирайте необходимите библиотеки",
  "once-activated-env": "След като виртуалната среда е активирана, инсталирайте необходимите библиотеки, като използвате pip",
  "select-python-executable": "Избор на изпълнимия файл на Python",
  "select-python-executable-subinfo-1":"Отидете в настройките в долния ляв ъгъл",
  "select-python-executable-subinfo-2": "Изберете пътя до изпълнимия файл на Python в средата, която току-що създадохте",
  "do-not-run-python-env": "Ако не знаете какъв е пътят до средата, можете да изпълните следното",
  "default-path-text": "По подразбиране пътят трябва да бъде",
  "instructions-conclusion": "Ако сте спазили инструкциите до този момент, средата трябва да е създадена и да можете да обучавате собствените си модели. Можете да затворите всичко, което е трябвало да отворите, и да продължите с ",
  "tutorial": "Урока ",
  "instructions-conclusion-rest-part": ", който ще ви насочи как да създавате и използвате собствени модели. В в случай че сте се сблъскали с някакви проблеми, можете да проверите пълното",
  "installation-guide": " ръководство за инсталиране",
  "install-microsoft-visual-redistributable": "Инсталирайте Microsoft Visual C++ Redistributable",
  "go-to": "Отидете в ",
  "install-VS-subinstruction-1": "Отидете надолу на страницата до раздела Visual Studio 2015, 2017 и 2019.",
  "install-VS-subinstruction-2": "Изтеглете и инсталирайте Microsoft Visual C++ Redistributable for Visual Studio 2015, 2017 и 2019 за вашата платформа.",
  "install": "Инсталирайте",
  "download": "Свалете ",
  "double-click-instruction": "Щракнете два пъти върху изтегления файл и следвайте инструкциите на екрана.",
  "open": "Отворете ",
  "press-enter-gpu": "и натиснете Enter, за да отворите",
  "create-conda-env": "Създаване на среда на conda",
  "create-conda-env-instruction-1": "Създайте нова среда на conda с име tf, като изпълните следната команда",
  "activate-env": "Активиране na средата",
  "update": "Обновяване на ",
  "run-following-command-gpu": "Изпълнете следната команда, за да настроите поддръжката на GPU",
  "getting-started": "Първи стъпки",
  "welcome": "Добре дошли ",
  "weights-bias-start":"Всяка връзка между невроните",
  "target-start":"В машинното обучение (ML) целта,",
  "epoch-start": "В машинното обучение една епоха",
  "learning-rate-start":"Степента на обучение контролира размера на стъпката",
  "no-python-title": "Няма Python",
  "no-python-message": "Не сте настроили python. Можете да видите как да го направите от секцията за настройване.",
  "no-models-found": "Не бяха открити модели",
  "new-model": "Нов модел",
  "homepage-text1-part1": "Първа стъпка",
  "homepage-text1-part2":",която трябва да поемета е да си вкарате някакъв вид dataset под формата на таблица или снимки, като отидете 'Данни' и изберете 'Импорт'",
  "homepage-text2-part1": "Втора стъпка",
  "homepage-text2-part2":" е да си направите модел на база някой dataset, който сте направили преди това, като отидете на 'Модели' и след това на 'Създаване'.",
  "homepage-text3-part1": "Трета стъпка",
  "homepage-text3-part2":" е да изберете кой модел искате да го тренирате, като изберете бутона 'Тренирай Модел'.",
  "train-model": "Тренирай",
  "homepage-text4-part1": "Последната стъпка ",
  "homepage-text4-part2": "е вече като сте готови с тренирането да го тествате и да видите какви резултати вади, като отидете на 'Използвай'. ",
  "use-model":"Използвай модел",
  "homepage-introduction": " в нашето приложение, в което всеки, който е запознат с програмирането или по-точно с изкуствения интелект може се възползва от функциите на програмата ни. Тук можете да създавате и тренирате модели, които можете да използвате в направата на приложения или програми, които правите. Тук можете да вкарвате и тренирате информация под формата на таблици или снимков материал. Можете бързо, лесно и ефетктивно да правите модели с помощта на machine learning(ML).",
  "start-with-easy-step": "Започнете с няколко лесни стъпки",
  "go-to-setup": "Към настройване",
  "import": "Вмъкване",
  "view":"Преглед",
  "not-trained":"Не е трениран",
  "create":"Създаване",
  "epochs": "Епохи",
  "select-model-options": "Избери опции за модела",
  "model-trained-for":"Моделът е трениран за",
  "integrate-table-text":"Този раздел съдържа код, който може да се използва за интегриране на модела в собствените ви проекти. Трябва да запазите модела и след това да го импортирате в кода по следния начин",
  "tabular data": "Таблични данни",
  "accuracy": "Точност",
  "edit": "Редактиране",
  "delete": "Изтриване",
  "model-type": "Вид модел",
  "model": "Модел",
  "test-model": "Тестване",
  "integrate-model":"Интегриране",
  "result": "резултат",
  "save-model": "Запази модела",
  "python":"Python",
  "settings-title":"Настройки",
  "python_exe_path": "Път до изпълнимия файл на python",
  "creating-model-title": "Създаване на модел",
  "creating-model-text":"Създаването на модела може да отнеме известно време",
  "python-error-title":"Python Грешка",
  "python-error-message":"Имаше грешка при изпълняването на python кода. Убедете се, че сте настройли всичко правилно. Може да сте забравили да изтеглите необходимите библиотеки.",
  "create-file-error-title": "Грешка при създаване на файл",
  "create-file-error-message": "Имаше грешка при създаването на файл.",
  "model-created-title":"Моделът беше успешно създаден",
  "model-created-message":"Моделът беше успешно създаден. Можете да продължите към тренирането му.",
  "model-download-started-title": "Тегленето започна",
  "model-download-started-message": "Изтеглянето на модела започна.",
  "apply":"Запази",
  "cancel": "Отмени",
  "how-to-setup-python-enviornment": "Как да създам изпълнимия файла?",
  "data-type":"Вид данни",
  "include":"Включи",
  "missing-values-title":"Някои данни липсват",
  "missing-values-text": "Някои данни липсват. Какво искате да направите с тях?",
  "has-headers": "Съдържа заглавия",
  "name-missing": "Не е въведено име",
  "create-tabular-dataset-warning":"Данните трябва да съдържат само цифри и латински букви, без запетаи и без NULL",
  "read-dataset-file-error-title":"Наборът от данни не е намерен",
  "read-dataset-file-error-message":"Наборът от данни не беше намерен. Може би е бил изтрит.",
  "create-env-title":"Създаване на python изпълнителен файл",
  "train-title":"Трениране",
  "starting-training":"Започване на тренирането на модела",
  "success-training-title":"Успешно трениране",
  "success-training-message":"Тренирането беше успешно",
  "records-per-graph":"Данни на графа"
}